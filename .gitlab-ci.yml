stages:
  - build 
  - test

build:debian-buster-GCC8-serial:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-buster-GCC8
  stage: build
  # Tags assign the gitlab runners.
  tags:
    - docker
  script:
    - cp build/platforms/make.inc.gfortran build/make.inc
    - make serial -j 2
  # Upload exciting binary and make.inc (so test can determine compiler)
  # Alternative is to use an env variable
  artifacts:
    paths:
      - bin/exciting_serial
      - build/make.inc
    # Uploads expire after 5 hours
    expire_in: 5 hrs

test-debian-buster-GCC8-serial:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-buster-GCC8
  stage: test
  # Depends on completion of the build stage
  # Downloads artifacts of the build stage
  dependencies:
    - build:debian-buster-GCC8-serial
  tags:
    - docker
  before_script:
    - apt-get --allow-releaseinfo-change update && apt-get install -y libpython3.7 libpython3.7-dev python3-pip
    - pip3 install --upgrade --force pillow==7.0.0 numpy termcolor lxml pytest pyyaml
  script:
    # run unit tests
    - bin/exciting_serial -run-unit-tests -kill-on-failure
    # Provide test suite parsers
    - pip3 install -e tools/exciting_tools
    # Run pytest unit tests for test suite functions
    - cd test && pytest test_functions
    - python3 runtest.py -e exciting_serial -repeat-tests 2
    # As currently in root/test
    - cd ../tools/exciting_tools && pytest

build:debian-buster-GCC8-mpiandsmp:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-buster-GCC8
  stage: build
  tags:
    - docker
  script:
    - cp build/platforms/make.inc.gfortran build/make.inc
    - make mpiandsmp -j 2
  artifacts:
    paths:
      - bin/exciting_mpismp
      - build/make.inc
    expire_in: 5 hrs

test-debian-buster-GCC8-mpiandsmp:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-buster-GCC8
  stage: test
  dependencies:
    - build:debian-buster-GCC8-mpiandsmp
  tags:
    - docker
  before_script:
    - apt-get --allow-releaseinfo-change update && apt-get install -y libpython3.7 libpython3.7-dev python3-pip
    - pip3 install --upgrade --force pillow==7.0.0 numpy termcolor lxml pytest pyyaml
  script:
    # run unit tests
    - export OMP_NUM_THREADS=2 && mpirun --allow-run-as-root -np 2 bin/exciting_mpismp -run-unit-tests -kill-on-failure
    # run application tests
    - pip3 install -e tools/exciting_tools
    # Allow mpirun to run as root (mpirun typically shouldn't be run as root)
    # See this ref: https://github.com/open-mpi/ompi/issues/4451
    - export OPENMPI_IN_DOCKER=True
    - cd test && pytest test_functions
    - python3 runtest.py -e exciting_mpismp -repeat-tests 2
    - cd ../tools/exciting_tools && pytest

# Pure serial build, which links to sequential MKL
build:debian-buster-Intel2019-pure-serial:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-base-with-nfs
  stage: build
  tags:
    - docker
  before_script:
    # Module file, with paths consistent with the nfs drive
    - cp -r build/utilities/modules/intel /etc/environment-modules/modules
    - eval "`/usr/lib/x86_64-linux-gnu/modulecmd.tcl sh autoinit`"
    - module load intel/2019
  script:
    - cp build/platforms/make.inc.ifort.serial build/make.inc
    - make serial -j 2
  artifacts:
    paths:
      - bin/exciting_serial
      - build/make.inc
    expire_in: 5 hrs

# Used for testing GW only
test-debian-buster-Intel2019-pure-serial-GW:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-base-with-nfs
  stage: test
  dependencies:
    - build:debian-buster-Intel2019-pure-serial
  tags:
    - docker
  before_script:
    - cp -r build/utilities/modules/intel /etc/environment-modules/modules
    - eval "`/usr/lib/x86_64-linux-gnu/modulecmd.tcl sh autoinit`"
    - module load intel/2019
    - pip3 install --upgrade --force pillow==7.0.0 numpy termcolor lxml pytest pyyaml
  script:
    # run GW application tests only, via the GROUP option
    - pip3 install -e tools/exciting_tools
    - cd test && pytest test_functions
    - "sed -i 's/  NONE.*/  NONE: False/g' defaults_config.yml"
    - "sed -i 's/  GW_TESTS.*/  GW_TESTS: True/g' defaults_config.yml"
    - python3 runtest.py -e exciting_serial -repeat-tests 2
    - cd ../tools/exciting_tools && pytest

# Note, this is not `pure` serial, as it links to threaded MKL
build:debian-buster-Intel2019-serial:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-base-with-nfs
  stage: build
  tags:
    - docker
  before_script:
    # Module file, with paths consistent with the nfs drive
    - cp -r build/utilities/modules/intel /etc/environment-modules/modules
    - eval "`/usr/lib/x86_64-linux-gnu/modulecmd.tcl sh autoinit`"
    - module load intel/2019
  script:
    - cp build/platforms/make.inc.ifort build/make.inc
    - make serial -j 2
  artifacts:
    paths:
      - bin/exciting_serial
      - build/make.inc
    expire_in: 5 hrs

test-debian-buster-Intel2019-serial:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-base-with-nfs
  stage: test
  dependencies:
    - build:debian-buster-Intel2019-serial
  tags:
    - docker
  before_script:
    - cp -r build/utilities/modules/intel /etc/environment-modules/modules
    - eval "`/usr/lib/x86_64-linux-gnu/modulecmd.tcl sh autoinit`"
    - module load intel/2019
    - pip3 install --upgrade --force pillow==7.0.0 numpy termcolor lxml pytest pyyaml
  script:
    # run unit tests
    - bin/exciting_serial -run-unit-tests -kill-on-failure
    # run application tests
    - pip3 install -e tools/exciting_tools
    - cd test && pytest test_functions
    - python3 runtest.py -e exciting_serial -repeat-tests 2
    - cd ../tools/exciting_tools && pytest

build:debian-buster-Intel2019-mpiandsmp:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-base-with-nfs
  stage: build
  tags:
    - docker
  before_script:
    - cp -r build/utilities/modules/intel /etc/environment-modules/modules
    - eval "`/usr/lib/x86_64-linux-gnu/modulecmd.tcl sh autoinit`"
    - module load intel/2019
    - apt-get install -y libfabric1 libfabric-dev
  script:
    - cp build/platforms/make.inc.ifort.profiler build/make.inc
    - mkdir docs/profiling
    - make mpiandsmp -j 2
  artifacts:
    paths:
      - bin/exciting_mpismp
      - build/make.inc
      # This dir includes pgopti.spi and pgopti.spl for use in profiling
      - docs/profiling

# Run tests and profile test coverage
test-debian-buster-Intel2019-mpiandsmp:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-base-with-nfs
  stage: test
  dependencies:
    - build:debian-buster-Intel2019-mpiandsmp
  tags:
    - docker
  before_script:
    - cp -r build/utilities/modules/intel /etc/environment-modules/modules
    - eval "`/usr/lib/x86_64-linux-gnu/modulecmd.tcl sh autoinit`"
    - module load intel/2019
    - apt-get install -y libfabric1 libfabric-dev
    - pip3 install --upgrade --force pillow==7.0.0 numpy termcolor lxml pytest pyyaml
  script:
    # run unit tests
    - export OMP_NUM_THREADS=2 && mpirun -np 2 bin/exciting_mpismp -run-unit-tests -kill-on-failure
    # run application tests
    - pip3 install -e tools/exciting_tools
    - cd test && pytest test_functions
    - python3 runtest.py -e exciting_mpismp -repeat-tests 2
    - cd ../tools/exciting_tools && pytest
    - cd ../../docs/profiling && profmerge
    - codecov -prj test_suite
  artifacts:
    paths:
      - docs/profiling/CodeCoverage
      - docs/profiling/CODE_COVERAGE.HTML

# Build documentation
build:debian-buster-documentation:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-base-docs
  stage: build
  tags:
    - docker
  script:
    - cp build/platforms/make.inc.gfortran build/make.inc
    # exciting input documentation
    - make doc
    # Ford documentation with graphical dependencies
    - make ford
  artifacts:
    paths:
      - docs/exciting/excitinginput.pdf
      - docs/exciting_ford

build:debian-buster-GCC8-smp:
  image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-buster-GCC8-April2022
  stage: build
  tags:
    - docker
  script:
    - cp build/platforms/make.inc.gfortran build/make.inc
    - make smp -j 2
  artifacts:
    paths:
      - bin/exciting_smp
      - build/make.inc
    expire_in: 5 hrs

# Test the Jupyter tutorials only
test-debian-buster-gcc8-smp-jupyter:
 image: gitdocker.physik.hu-berlin.de/sol/exciting:debian-buster-GCC8-April2022
 stage: test
 dependencies:
   - build:debian-buster-GCC8-smp
 tags:
   - docker
 # One might consider moving construction of venv to the build state and make it an artifact
 script:
   - cd tools/excitingjupyter
   - source create_env.sh
   - cd excitingjupyter
   - jupyter nbconvert --execute 01_getting_started/tutorial1.ipynb --to markdown
   - jupyter nbconvert --execute tutorial_excited_states_from_bse/tutorial_excited_states_from_bse.ipynb --to markdown
   - jupyter nbconvert --execute 02_excited_states/xray_absorption_spectra_using_bse.ipynb --to markdown
